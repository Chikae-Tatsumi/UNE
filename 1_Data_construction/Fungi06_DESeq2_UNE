# Deseq2 (https://joey711.github.io/phyloseq-extensions/DESeq2.html)
library("DESeq2"); packageVersion("DESeq2")

# Import files
design <- read.csv("~/R/Analysis/2_UNE/experimental_design.csv",header=T)
setwd("~/R/Analysis/2_UNE/ITS")
seqtab.nochim <- read.table("seqtabnochim.txt",header=T)
seqtab.nochim <- as.matrix(seqtab.nochim)
taxa <- read.table("taxonomy.txt",header=T)
taxa <- as.matrix(taxa)

rownames(design) <- rownames(seqtab.nochim)
ps.deseq <- phyloseq(otu_table(seqtab.nochim, taxa_are_rows=FALSE), 
                         tax_table(taxa), sample_data(design))
                         
# Remove non-fungal ASV 
ps.deseq = subset_taxa(ps.deseq,(Kingdom  == "k__Fungi" ))
                         
# DESeq2 conversion and call (see https://bioconductor.org/packages/devel/bioc/vignettes/phyloseq/inst/doc/phyloseq-mixture-models.html)
diagdds = phyloseq_to_deseq2(ps.deseq, ~DFB*DFE)
gm_mean = function(x, na.rm=TRUE){
  exp(sum(log(x[x > 0]), na.rm=na.rm) / length(x))
}
geoMeans = apply(counts(diagdds), 1, gm_mean)

gm_mean = function(x, na.rm=TRUE){
  exp(sum(log(x[x > 0]), na.rm=na.rm) / length(x))
}
geoMeans = apply(counts(diagdds), 1, gm_mean)
diagdds = estimateSizeFactors(diagdds, geoMeans = geoMeans)
diagdds = DESeq(diagdds, fitType="local")

# Investigate test results table
res = results(diagdds, cooksCutoff = FALSE)
alpha = 0.01
sigtab = res[which(res$padj < alpha), ]
sigtab = cbind(as(sigtab, "data.frame"), as(tax_table(ps)[rownames(sigtab), ], "matrix"))
head(sigtab)
dim(sigtab)

# Get ASV table (https://github.com/joey711/phyloseq/issues/283)
diagdds = estimateDispersions(diagdds)
diagvst = getVarianceStabilizedData(diagdds)
dim(diagvst)
diagvst = diagvst-min(diagvst)

otu_table(ps.deseq) <- otu_table(diagvst, taxa_are_rows = TRUE)

#store the DNA sequences of our ASVs in the refseq slot of the phyloseq object

dna <- Biostrings::DNAStringSet(taxa_names(ps.deseq))
names(dna) <- taxa_names(ps.deseq)
ps.deseq <- merge_phyloseq(ps.deseq, dna)
taxa_names(ps.deseq) <- paste0("ASV", seq(ntaxa(ps.deseq)))
ps.deseq

# Remove 
ps.deseq = subset_taxa(ps.deseq,(Kingdom  == "k__Fungi" ))

# Save
ps<-cbind(ps.deseq@otu_table,ps.deseq@tax_table)
write.table(ps,  file="deseq_ASV_table.txt")

#ADONIS for DESeq
library (vegan)
Seq_Depth <- rowSums(seqtab.nochim)
comm<- t(diagvst)
sink(file = "adonis.seq_depthforDESeq.doc")
adonis(comm ~ Seq_Depth, permutations=5000)
sink()

